Datos_cuponados<-mutate(Datos_cuponados, "Meses"=(Datos_cuponados$Fecha_Vencimiento-hoy))
Datos_cuponados$Meses<-trunc(as.double(Datos_cuponados$Meses)/30)
for (i in 1:length(Datos_cuponados$Precio)) {
v[i]<-bond.yield(hoy, Datos_cuponados$Fecha_Vencimiento[i], Datos_cuponados$Cupon[i]/100, freq = Datos_cuponados$Periodicidad[i], Datos_cuponados$Precio[i], convention = "30/360", 12, 100)
}
v
Datos_cuponados<-mutate(Datos_cuponados, "Yield"=v)
Nelson.Siegel(Datos_cuponados$Yield, Datos_cuponados$Meses)
Datos_cero<-filter(DatosProyecto9, Tipo == "Bonos Cero Cupón")
Datos_cero<-filter(DatosProyecto9, Tipo == "Bonos Cero Cupón")
Datos_cero<-mutate(Datos_cero, "Meses" = (Datos_cero$Fecha_Vencimiento-hoy))
Datos_cero$Meses<-trunc(as.double(Datos_cero$Meses)/30)
View(Datos_cero)
v
hoy<-as.Date("01-06-2021", format="%d-%m-%Y")
Datos_cuponados<-mutate(Datos_cuponados, "Meses"=(Datos_cuponados$Fecha_Vencimiento-hoy))
Datos_cuponados$Meses<-trunc(as.double(Datos_cuponados$Meses)/30)
for (i in 1:length(Datos_cuponados$Precio)) {
v[i]<-bond.yield(hoy, Datos_cuponados$Fecha_Vencimiento[i], Datos_cuponados$Cupon[i]/100, freq = Datos_cuponados$Periodicidad[i], Datos_cuponados$Precio[i], convention = "30/360", 12, 100)
}
v
options(sci=999)
v
Datos_cuponados<-mutate(Datos_cuponados, "Yield"=v)
options(scipen=999)
Datos_cuponados<-filter(DatosProyecto9, Tipo=="Títulos Cuponados")
v<-vector(mode = "double", length = length(Datos_cuponados$Cupon))
hoy<-as.Date("01-06-2021", format="%d-%m-%Y")
Datos_cuponados<-mutate(Datos_cuponados, "Meses"=(Datos_cuponados$Fecha_Vencimiento-hoy))
Datos_cuponados$Meses<-trunc(as.double(Datos_cuponados$Meses)/30)
for (i in 1:length(Datos_cuponados$Precio)) {
v[i]<-bond.yield(hoy, Datos_cuponados$Fecha_Vencimiento[i], Datos_cuponados$Cupon[i]/100, freq = Datos_cuponados$Periodicidad[i], Datos_cuponados$Precio[i], convention = "30/360", 12, 100)
}
v
Datos_cuponados<-mutate(Datos_cuponados, "Yield"=v)
Nelson.Siegel(Datos_cuponados$Yield, Datos_cuponados$Meses)
# 100/PRECIO ^{1/T} -1
for (i in 1:length(Datos_cuponados$Precio)) {
v[i]<-bond.yield(hoy, Datos_cuponados$Fecha_Vencimiento[i], Datos_cuponados$Cupon[i]/100, freq = Datos_cuponados$Periodicidad[i], Datos_cuponados$Precio[i], convention = "ACT/ACT", 12, 100)
}
v
View(DatosProyecto9)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(readr)
library(dplyr)
library(plyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(readxl)
library(kableExtra)
library(knitr)
library(xtable)
library(gridExtra)
library(lubridate)
require(xts)
require(YieldCurve)
library(rmdformats)
DatosProyecto9 <- read_excel("DatosProyecto9.xlsx")
colnames(DatosProyecto9)<- c("Tipo", "fecha", "Fecha_Vencimiento", "Periodicidad", "Cupon", "Precio")
DatosProyecto9$Fecha_Vencimiento<-as.Date(DatosProyecto9$Fecha_Vencimiento, format="%d/%m/%y")
options(scipen=999)
Datos_cuponados<-filter(DatosProyecto9, Tipo=="Títulos Cuponados")
v<-vector(mode = "double", length = length(Datos_cuponados$Cupon))
hoy<-as.Date("01-06-2021", format="%d-%m-%Y")
Datos_cuponados<-mutate(Datos_cuponados, "Meses"=(Datos_cuponados$Fecha_Vencimiento-hoy))
Datos_cuponados$Meses<-trunc(as.double(Datos_cuponados$Meses)/30)
for (i in 1:length(Datos_cuponados$Precio)) {
v[i]<-bond.yield(hoy, Datos_cuponados$Fecha_Vencimiento[i], Datos_cuponados$Cupon[i]/100, freq = Datos_cuponados$Periodicidad[i], Datos_cuponados$Precio[i], convention = "ACT/ACT", 12, 100)
}
library(jrvFinance)
Datos_cero<-filter(DatosProyecto9, Tipo == "Bonos Cero Cupón")
Datos_cero<-mutate(Datos_cero, "Meses" = (Datos_cero$Fecha_Vencimiento-hoy))
Datos_cero$Meses<-trunc(as.double(Datos_cero$Meses)/30)
a<-vector(mode="numeric", length = length(Datos_cero$Meses))
for (i in 1:length(Datos_cero$Meses))
{
a[i]<-(100/Datos_cero$Precio[i])^(1/Datos_cero$Meses[i])-1
}
a
for (i in 1:length(Datos_cero$Meses))
{
a[i]<-(100/Datos_cero$Precio[i])^(1/(Datos_cero$Meses[i]/12)) -1
}
a
View(Datos_cero)
for (i in 1:length(Datos_cero$Meses))
{
if(Datos_cero$Meses[i]==0)
{
a[i]<-0
}else{
a[i]<-(100/Datos_cero$Precio[i])^(1/(Datos_cero$Meses[i]/12)) -1
}
}
a
Datos_cero<-mutate(Datos_cero, "Yield"=a)
Nelson.Siegel(Datos_cero$Yield, Datos_cero$Meses)
b<-Nelson.Siegel(Datos_cero$Yield, Datos_cero$Meses)
b<-Nelson.Siegel(Datos_cero$Yield, Datos_cero$Meses)
Nelson.Siegel(Datos_cero$Yield, Datos_cero$Meses)
View(b)
b[1, 1]
beta0<-b[1, 1]
beta1<-b[1, 2]
beta2<-b[1, 3]
lambda<-b[1, 4]
fx<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
plot(x, fx)
x<-Datos_cero$Yield
fx<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
plot(x, fx)
plot(x, fx, type=1)
plot(x, fx, type="o")
library(matlab)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(readr)
library(dplyr)
library(plyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(readxl)
library(kableExtra)
library(knitr)
library(xtable)
library(gridExtra)
library(lubridate)
require(xts)
require(YieldCurve)
library(rmdformats)
library(jrvFinance)
DatosProyecto9 <- read_excel("DatosProyecto9.xlsx")
colnames(DatosProyecto9)<- c("Tipo", "fecha", "Fecha_Vencimiento", "Periodicidad", "Cupon", "Precio")
DatosProyecto9$Fecha_Vencimiento<-as.Date(DatosProyecto9$Fecha_Vencimiento, format="%d/%m/%y")
options(scipen=999)
Datos_cuponados<-filter(DatosProyecto9, Tipo=="Títulos Cuponados")
v<-vector(mode = "double", length = length(Datos_cuponados$Cupon))
hoy<-as.Date("01-06-2021", format="%d-%m-%Y")
Datos_cuponados<-mutate(Datos_cuponados, "Meses"=(Datos_cuponados$Fecha_Vencimiento-hoy))
Datos_cuponados$Meses<-trunc(as.double(Datos_cuponados$Meses)/30)
tasas <- 1:length(Datos_cuponados$Tipo)
for (i in 1:length(Datos_cuponados$Tipo)) {
flujosdinero <- c(-1*Datos_cuponados$Precio[i])
valorcupon <- (Datos_cuponados$Cupon[i])/(Datos_cuponados$Periodicidad[i])
cantidadcupones <- trunc((Datos_cuponados$Meses[i])/(12/(Datos_cuponados$Periodicidad[i])))
flujosdinero <- c(flujosdinero,rep(valorcupon,cantidadcupones-1),100+valorcupon)
valorbono <- function(i, flujosdinero,
t=seq(0,length(flujosdinero)-1))
sum(flujosdinero / (1 + i)^t)
tasarendimiento <- function(flujosdinero) {
uniroot(valorbono, c(-1, 1), flujosdinero = flujosdinero)$root
}
tasas[i] <- tasarendimiento(flujosdinero)
}
Datos_cuponados<-mutate(Datos_cuponados, "Tasa nominal"=tasas)
Datos_cuponados<-mutate(Datos_cuponados, "Rendimiento anual conv"=tasas*(Datos_cuponados$Periodicidad))
Datos_cuponados<-mutate(Datos_cuponados, "Rendimiento anual"=(1+Datos_cuponados$"Rendimiento anual conv")^(Datos_cuponados$Periodicidad) -1)
colnames(Datos_cuponados)
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual conv`/12, Datos_cuponados$Meses)
beta01<-vectores[1, 1]
beta11<-vectores[1, 2]
beta21<-vectores[1, 3]
lambda1<-vectores[1, 4]
ab<-summarise(Datos_cuponados, max(Meses))
ba<-summarise(Datos_cuponados, min(Meses))
c<-beta01+beta11*exp(-ab/lambda1)+beta21*(ab/lambda1)*exp(-ab/lambda1)
c
d<-c<-beta01+beta11*exp(-ba/lambda1)+beta21*(ba/lambda1)*exp(-ba/lambda1)
d
min(Meses)
View(ab)
View(ba)
ab<-summarise(Datos_cuponados, max(Meses))/12
ba<-summarise(Datos_cuponados, min(Meses))/12
c<-beta01+beta11*exp(-ab/lambda1)+beta21*(ab/lambda1)*exp(-ab/lambda1)
c
d<-c<-beta01+beta11*exp(-ba/lambda1)+beta21*(ba/lambda1)*exp(-ba/lambda1)
d
plot(x, gx, type="o")
x<-Datos_cuponados$Meses/12
gx<-beta01+beta11*exp(-x/lambda1)+beta21*(x/lambda1)*exp(-x/lambda1)
plot(x, gx, type="o")
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual conv`/12, Datos_cuponados$Meses)
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual conv`/12, Datos_cuponados$Meses)
beta01<-vectores[1, 1]
beta11<-vectores[1, 2]
beta11<-vectores[1, 2]
beta21<-vectores[1, 3]
lambda1<-vectores[1, 4]
x<-Datos_cuponados$Meses/12
gx<-beta01+beta11*exp(-x/lambda1)+beta21*(x/lambda1)*exp(-x/lambda1)
plot(x, gx, type="o")
ab<-summarise(Datos_cuponados, max(Meses))/12
ba<-summarise(Datos_cuponados, min(Meses))/12
c<-beta01+beta11*exp(-ab/lambda1)+beta21*(ab/lambda1)*exp(-ab/lambda1)
c
d<-c<-beta01+beta11*exp(-ba/lambda1)+beta21*(ba/lambda1)*exp(-ba/lambda1)
d
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual`/12, Datos_cuponados$Meses)
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual`/12, Datos_cuponados$Meses)
beta01<-vectores[1, 1]
beta01<-vectores[1, 1]
beta11<-vectores[1, 2]
beta21<-vectores[1, 3]
lambda1<-vectores[1, 4]
x<-Datos_cuponados$Meses/12
gx<-beta01+beta11*exp(-x/lambda1)+beta21*(x/lambda1)*exp(-x/lambda1)
plot(x, gx, type="o")
c<-beta01+beta11*exp(-ab/lambda1)+beta21*(ab/lambda1)*exp(-ab/lambda1)
c
d<-beta01+beta11*exp(-2/lambda1)+beta21*(2/lambda1)*exp(-2/lambda1)
d
x<-Datos_cuponados$Meses/12
gx<-beta01+beta11*exp(-x/lambda1)+beta21*(x/lambda1)*exp(-x/lambda1)
plot(x, gx, type="o")
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual conv`/12, Datos_cuponados$Meses)
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual conv`/12, Datos_cuponados$Meses)
beta01<-vectores[1, 1]
beta01<-vectores[1, 1]
beta11<-vectores[1, 2]
beta21<-vectores[1, 3]
lambda1<-vectores[1, 4]
ab<-summarise(Datos_cuponados, max(Meses))/12
ba<-summarise(Datos_cuponados, min(Meses))/12
c<-beta01+beta11*exp(-ab/lambda1)+beta21*(ab/lambda1)*exp(-ab/lambda1)
c
d<-beta01+beta11*exp(-ba/lambda1)+beta21*(ba/lambda1)*exp(-ba/lambda1)
d
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual`/12, Datos_cuponados$Meses)
vectores<-Nelson.Siegel(Datos_cuponados$`Rendimiento anual`/12, Datos_cuponados$Meses)
beta01<-vectores[1, 1]
beta11<-vectores[1, 2]
beta21<-vectores[1, 3]
lambda1<-vectores[1, 4]
lambda1<-vectores[1, 4]
x<-Datos_cuponados$Meses/12
gx<-beta01+beta11*exp(-x/lambda1)+beta21*(x/lambda1)*exp(-x/lambda1)
plot(x, gx, type="o")
Datos_cero<-filter(DatosProyecto9, Tipo == "Bonos Cero Cupón")
Datos_cero<-mutate(Datos_cero, "Meses" = (Datos_cero$Fecha_Vencimiento-hoy))
Datos_cero$Meses<-trunc(as.double(Datos_cero$Meses)/30)
a<-vector(mode="numeric", length = length(Datos_cero$Meses))
for (i in 1:length(Datos_cero$Meses))
{
if(Datos_cero$Meses[i]==0)
{
a[i]<-0
}else{
a[i]<-(100/Datos_cero$Precio[i])^(1/(Datos_cero$Meses[i]/12)) -1
}
}
a
Datos_cero<-mutate(Datos_cero, "Yield"=a)
b<-Nelson.Siegel(Datos_cero$Yield/12, Datos_cero$Meses)
beta0<-b[1, 1]
beta1<-b[1, 2]
beta2<-b[1, 3]
lambda<-b[1, 4]
x<-Datos_cero$Meses/12
fx<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
plot(x, fx, type="o")
Datos_cero<-mutate(Datos_cero, "Anos" = Meses/12)
Datos_cero<-filter(DatosProyecto9, Tipo == "Bonos Cero Cupón")
Datos_cero<-mutate(Datos_cero, "Meses" = (Datos_cero$Fecha_Vencimiento-hoy))
Datos_cero$Meses<-trunc(as.double(Datos_cero$Meses)/30)
Datos_cero<-mutate(Datos_cero, "Anos" = Meses/12)
tasas_yield_cero<-vector(mode="numeric", length = length(Datos_cero$Meses))
for (i in 1:length(Datos_cero$Meses))
{
if(Datos_cero$Meses[i]==0)
{
tasas_yield_cero[i]<-0
}else{
tasas_yield_cero[i]<-(100/Datos_cero$Precio[i])^(1/(Datos_cero$Meses[i]/12)) -1
}
}
Datos_cero<-mutate(Datos_cero, "Yield"=tasas_yield_cero)
b<-Nelson.Siegel(Datos_cero$Yield/12, Datos_cero$Meses)
beta0<-b[1, 1]
beta1<-b[1, 2]
beta2<-b[1, 3]
lambda<-b[1, 4]
x<-Datos_cero$Meses/12
fx<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
plot(x, fx, type="o")
plot(x, fx, type="o")
tasa_rendimiento<-vector(mode="numeric", length=length(Anos))
tasa_rendimiento<-vector(mode="numeric", length=length(Datos_cero$Anos))
datos_graf_cero<-rbind(Datos_cero$Anos, tasa_rendimiento)
View(datos_graf_cero)
tasa_rendimiento<-vector(mode="numeric", length=length(Datos_cero$Anos))
datos_graf_cero<-cbind(Datos_cero$Anos, tasa_rendimiento)
colnames(datos_graf_cero)<-c("Anos", "Rendimiento")
for (i in 1:length(datos_graf_cero$Anos))
{
x<-datos_graf_cero$Anos[i]
datos_graf_cero$Rendimiento[i]<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
}
Datos_graf_cero<-cbind(Datos_cero$Anos, tasa_rendimiento)
colnames(datos_graf_cero)<-c("Anos", "Rendimiento")
for (i in 1:length(Datos_graf_cero$Anos))
{
x<-Datos_graf_cero$Anos[i]
Datos_graf_cero$Rendimiento[i]<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
}
Datos_grafcero<-cbind(Datos_cero$Anos, tasa_rendimiento)
colnames(datos_grafcero)<-c("Anos", "Rendimiento")
Datos_grafcero<-cbind(Datos_cero$Anos, tasa_rendimiento)
colnames(Datos_grafcero)<-c("Anos", "Rendimiento")
for (i in 1:length(Datos_grafcero$Anos))
{
x<-Datos_grafcero$Anos[i]
Datos_grafcero$Rendimiento[i]<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
}
Datos_grafcero<-as.data.frame(Datos_grafcero)
colnames(Datos_grafcero)<-c("Anos", "Rendimiento")
for (i in 1:length(Datos_grafcero$Anos))
{
x<-Datos_grafcero$Anos[i]
Datos_grafcero$Rendimiento[i]<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
}
ggplot(datos_graf_cero, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()
ggplot(Datos_grafcero, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()
Datos_cuponados<-mutate(Datos_cuponados, "Anos"=Meses/12)
tasa_rendimiento<-vector(mode="numeric", length=length(Datos_cuponados$Anos))
Datos_grafcupon<-cbind(Datos_cero$Anos, tasa_rendimiento)
Datos_grafcupon<-as.data.frame(Datos_grafcupon)
colnames(Datos_grafcupon)<-c("Anos", "Rendimiento")
for (i in 1:length(Datos_grafcupon$Anos))
{
x<-Datos_grafcupon$Anos[i]
Datos_grafcupon$Rendimiento[i]<-beta0+beta1*exp(-x/lambda)+beta2*(x/lambda)*exp(-x/lambda)
}
ggplot(Datos_grafcupon, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()
for (i in 1:length(Datos_grafcupon$Anos))
{
x<-Datos_grafcupon$Anos[i]
Datos_grafcupon$Rendimiento[i]<-beta01+beta11*exp(-x/lambda1)+beta21*(x/lambda1)*exp(-x/lambda1)
}
ggplot(Datos_grafcupon, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()
ggplot(Datos_grafcero, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()+
labs(title="Curva de Rendimiento de los bonos cero cupón", x="Tiempo de maduración en años", y="Rendimiento de la tasa forward")
ggplot(Datos_grafcupon, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()+
labs(title="Curva de Rendimiento de los bonos titulados", x="Tiempo de maduración en años", y="Rendimiento de la tasa forward")
ggplot(Datos_grafcupon, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()+
labs(title="Curva de Rendimiento de los bonos titulados", x="Tiempo de maduración en años", y="Rendimiento de la tasa forward")
ggplot(Datos_grafcero, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()+
labs(title="Curva de Rendimiento de los bonos cero cupón", x="Tiempo de maduración en años", y="Rendimiento de la tasa forward")
ggplot(Datos_grafcero, mapping = aes(x=Anos, y=Rendimiento))+
geom_line()+
labs(title="Curva de Rendimiento de los bonos cero cupón", x="Tiempo de maduración en años", y="Rendimiento de la tasa forward")
edades_muerte<-vector(mode="numeric", length=10000)
install.packages("htmlwidgets")
library(readr)
library(readr)
library(tidyverse)
library(lmtest)
library(tidyverse)
library(lmtest)
library(dplyr)
library(modelr)
library(tseries)
library(socviz)
datos2 <- organdata
modelo <- lm(data = datos2, donors~pop+txt_pop, health, pubhealth, gdp, roads, external)
modelo <- lm(data = datos2, donors~pop+txp_pop, health, pubhealth, gdp, roads, external)
modelo <- lm(data = datos2, donors~pop+txp_pop+health+ pubhealth + gdp + roads +external)
summary(modelo)
modelo <- lm(data = datos2, donors~pop+txp_pop+health+ pubhealth + gdp + roads +external+cerebvas+assault)
summary(modelo)
datos2 <- datos2 %>% add_residuals(modelo)
jarque.bera.test(datos2$resid)
jarque.bera.test(na.omit(datos2$resid))
plot(modelo)
bptest(modelo)
coeftest(modelo, vcov=vcovHC(modelo, type='HC2'))
library(sandwich)
coeftest(modelo, vcov=vcovHC(modelo, type='HC2'))
coefci(modelo, vcov. = vcovHC(modelo, type='HC2'))
opcions(sci=999)
options(sci=999)
coefci(modelo, vcov. = vcovHC(modelo, type='HC2'))
mod2 <- lm(data=datos2, donors~pubhealth+roads+txp_pop)
summary(mod2)
rm(list=ls())
library(dplyr)
library(modelr)
library(tseries)
library(lmtest)
library(socviz)
donadores <- organdata
glimpse(donadores)
modelo <- lm(donors~gdp+roads+cerebvas+assault+external, data=donadores)
summary(modelo)
coefci(modelo, level=.95)
donadores<- donadores %>%
add_residuals(modelo)
par(mfrow=c(2,2))
plot(modelo)
jarque.bera.test(na.omit(donadores$resid))
bptest(modelo)
donadores <- donadores %>%
mutate(lngdp=log(gdp))
modelo <- lm(donors~lngdp+roads+cerebvas+assault+external, data=donadores)
donadores<- donadores %>%
select(-resid) %>%
add_residuals(modelo)
par(mfrow=c(2,2))
plot(modelo)
jarque.bera.test(na.omit(donadores$resid))
bptest(modelo)
library(sandwich)
summary(modelo)
coeftest(modelo, vcov = vcovHC(modelo, type="HC1"))
library(tidyverse)
library(ggplot2)
library(readxl)
library(xtable)
data = read.csv('cultivos_global.csv')
setwd("C:/Users/andre/OneDrive/Documents/Universidad/IIS-2023/Estadística Actuarial I/Proyecto/Proyecto_Estadistica")
data = read.csv('cultivos_global.csv')
data_limpia = data %>%
select(c('Área', 'Elemento', 'Producto', 'Año', 'Unidad', 'Valor'))
prod_ban = data_limpia %>%
filter(Elemento == 'Producción' & Producto == 'Bananos')
prod_ban_wide1 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
pivot_wider(id_cols = Año, names_from = Área, values_from = Valor)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(promedio=mean(Valor)) %>%
summarise(maximo=max(Valor, na.rm = TRUE)) %>%
summarise(minimo=min(Valor, na.rm = TRUE )) %>%
spread(quinquenio, promedio, maximo, minimo)
View(prod_ban)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(promedio=mean(Valor)) %>%
spread(quinquenio, promedio, maximo, minimo)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(promedio=mean(Valor)) %>%
spread(quinquenio, promedio, maximo, minimo)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(promedio=mean(Valor)) %>%
spread(quinquenio, promedio)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(maximo=max(Valor, na.rm = TRUE), promedio=mean(Valor)) %>%
spread(quinquenio, promedio, maximo)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(maximo=max(Valor, na.rm = TRUE)) %>%
spread(quinquenio, promedio)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(maximo=max(Valor, na.rm = TRUE)) %>%
spread(quinquenio, maximo)
summarise(maximo=max(Valor, na.rm = TRUE)) %>%
summarise(minimo=min(Valor, na.rm = TRUE )) %>%
tesis %>%
mutate(quinquenio = as.integer(cut(year, 7))) %>%
group_by(quinquenio, muncode) %>%
summarise(promedio=mean(ampolaH)) %>%
spread(quinquenio, promedio)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(maximo=max(Valor, na.rm = TRUE)) %>%
spread(quinquenio, maximo)
View(prod_ban_wide2)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área) %>%
summarise(promedio=mean(Valor)) %>%
spread(quinquenio, promedio)
prod_ban_wide2 = prod_ban %>%
filter(Área %in% c('Costa Rica', 'Colombia', 'Guatemala')) %>%
mutate(quinquenio = as.integer(cut(Año, breaks = seq(1960, 2025, by = 5)))) %>%
group_by(quinquenio, Área)
summarise(minimo=min(Valor), promedio=mean(Valor), maximo=max(Valor))
summarise(prod_ban_wide2, minimo=min(Valor), promedio=mean(Valor), maximo=max(Valor))
tabla1 = summarise(prod_ban_wide2, minimo=min(Valor), promedio=mean(Valor), maximo=max(Valor))
View(tabla1)
